{"version":3,"file":"main.e0508c823422c6d16961.bundle.js","sources":["webpack:///./src/story.css","webpack:///./src sync \\.","webpack:///./src/index.ts","webpack:///./src/mediaQuery.ts","webpack:///./src/readme.raw.md","webpack:///./src/story.css?e47c","webpack:///./src/story.tsx","webpack:///./src/useBreakpoint.ts","webpack:///./src/useResize.ts","webpack:///./util.inspect (ignored)"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../home/gitpod/.nvm/versions/node/v10.18.0/lib/node_modules/mhy/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"body {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  margin: 0;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\", \"\",{\"version\":3,\"sources\":[\"/workspace/use-breakpoint/src/story.css\"],\"names\":[],\"mappings\":\"AAAA;EACC,8BAAsB;UAAtB,sBAAsB;EACtB,SAAS;EACT,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,wBAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB,EAAA\",\"file\":\"story.css\",\"sourcesContent\":[\"body {\\n\\tbox-sizing: border-box;\\n\\tmargin: 0;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n}\"]}]);\n// Exports\nmodule.exports = exports;\n","var map = {\n\t\"./story.tsx\": \"./src/story.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive \\\\.?(story|stories|book)\\\\.[jt]sx?$\";","import useBreakpoint from './useBreakpoint'\nimport useResize from './useResize'\nimport mediaQuery from './mediaQuery'\n\nexport const UP = '+'\nexport const DOWN = '-'\nexport const LANDSCAPE = '-'\nexport const PORTRAIT = '|'\n\ninterface IOptions {\n    breakpoints: {\n        [key: string]: number[]\n    }\n}\n\nexport let options\n\nexport const setup = function(opts: IOptions) {\n    Object.entries(opts.breakpoints).forEach(([name, [from, to]]) =>\n        [['', [from, to]], [UP, [from, 10000]], [DOWN, [0, to]]].forEach(([symbol, fromTo]) =>\n            ['', LANDSCAPE, PORTRAIT].forEach(orientation => {\n                // eslint-disable-next-line\n                opts.breakpoints[`${orientation}${name}${symbol}`] = fromTo as [number, number]\n            })\n        )\n    )\n\n    options = opts\n}\n\nexport const breakpoints = {\n    micro: [0, 375],\n    mobile: [376, 639],\n    tablet: [640, 1023],\n    small: [1024, 1439],\n    medium: [1440, 1919],\n    large: [1920, 10000]\n}\n\nsetup({ breakpoints })\n\nexport default useBreakpoint\nexport { useResize, mediaQuery }","import { options, LANDSCAPE, PORTRAIT, UP, DOWN } from '.'\n\nconst mediaQuery = input => {\n    let generated = ''\n    if (typeof input[0] === 'string') {\n        input = [input]\n    }\n\n    for (const value of input) {\n        const bp = options.breakpoints[value[0]]\n        if (!bp) continue\n\n        const key = value[0]\n        const first = key[0]\n        const last = key[key.length - 1]\n\n        generated += `@media screen `\n\n\n        if (last === UP) {\n            generated += `and (min-width: ${bp[0]}) `\n        }\n        else if (last === DOWN) {\n            generated += `and (max-width: ${bp[1]}) `\n        }\n        else {\n            generated += `and (min-width: ${bp[0]}) and (max-width: ${bp[1]}) `\n        }\n\n        if (first === PORTRAIT) {\n            generated += `and (orientation: portrait) `\n        }\n        else if (first === LANDSCAPE) {\n            generated += `and (orientation: landscape) `\n        }\n\n        return generated += `{ ${value[1]} }`\n    }\n}\n\nexport default mediaQuery","export default \"# Intro\\n\\nReact `useBreakpoint` hook to have different values for a variable\\nbased on a breakpoints.\\n\\n# Setup\\n\\nBy default you don't need to do anything. The following default values\\nare being used.\\n\\n```js\\nconst breakpoints = {\\n    micro: [0, 375],\\n    mobile: [376, 639],\\n    tablet: [640, 1023],\\n    small: [1024, 1439],\\n    medium: [1440, 1919],\\n    large: [1920, 10000]\\n}\\n```\\n\\n## Override default settings\\n\\n```js\\nimport { setup, breakpoints } from '@w11r/use-breakpoint'\\n\\nsetup({\\n    breakpoints: {\\n        // Extend default values\\n        ...breakpoints,\\n        alienDevice: [342, 43534] // from, to\\n    }\\n})\\n```\\n\\n# Usage\\n\\n```js\\nuseBreakpoint(defaultValue, breakpointValues)\\n\\n// breakpointValues: array of breakpoint based values\\n[\\n  ['mobile', 300],\\n  ['tablet', 400]\\n]\\n\\n// In case you have a single breakpoint value, `['mobile', 300]`\\nis enough instead of `[['mobile', 300]]`\\n```\\n\\nComponent example\\n\\n```jsx\\nimport useBreakpoint from '@w11r/use-breakpoint'\\n\\nconst MyCmp = () => {\\n    const columns = useBreakpoint([1,2], ['mobile', [2,1]])\\n    \\n    return <Grid cols={columns} />\\n}\\n\\n// Or using inline\\nconst MyCmp = () => {\\n    return <Grid cols={useBreakpoint([1,2], ['mobile', [2,1]])} />\\n}\\n```\\n\\n> _Rules-of-Hooks_ are still true in this case as well. Make sure\\n> your component will __ALWAYS__ run it without any condition!\\n\\n## Modifiers\\n\\nAll breakpoint names coming with modifiers included.\\n\\n### Orientation prefix\\n\\n- `` (none): all\\n- `-`: Landscape\\n- `|`: Portrait\\n\\n### Range suffix\\n\\nYou can also control your value to behave as `and up` and `and down`.\\n\\n- `` (none): all\\n- `+`: `and up`\\n- `-`: `and down`\\n\\n### Examples\\n\\n- `['|mobile', 300]`: on mobile, on portrait\\n- `['|mobile+', 300]`: on mobile and up, on portrait\\n- `['mobile+', 300]`: on mobile and up, both portrait and landscape\\n- `['mobile', 300]`: on mobile, both portrait and landscape\\n- `['tablet-', 300]`: on tablet and below, both portrait and landscape\\n- `['mobile-', 300]`: on mobile and down, both portrait and landscape\\n\\n# FAQ\\n\\n## Which rule is being prioritized\\n\\nThe hook uses _eager_ evaluation, so the first truthy breakpoint value\\ngets returned.\\n\"","var api = require(\"!../../../home/gitpod/.nvm/versions/node/v10.18.0/lib/node_modules/mhy/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../home/gitpod/.nvm/versions/node/v10.18.0/lib/node_modules/mhy/node_modules/css-loader/dist/cjs.js??ref--7-1!../../../home/gitpod/.nvm/versions/node/v10.18.0/lib/node_modules/mhy/node_modules/postcss-loader/src/index.js??ref--7-2!../../../home/gitpod/.nvm/versions/node/v10.18.0/lib/node_modules/mhy/node_modules/sass-loader/dist/cjs.js??ref--7-3!./story.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","import React from 'react'\nimport { storiesOf } from '@storybook/react'\n\nimport useBreakpoint from './useBreakpoint'\nimport readme from './readme.raw.md'\n\nimport './story.css'\n\nconst opts = {\n    notes: { markdown: readme }\n}\n\nstoriesOf('Hooks|useBreakpoint', module).add(\n    'Default',\n    () => {\n        const value = useBreakpoint('none', [\n            ['micro', 'is micro'],\n            ['mobile', 'is mobile'],\n            ['tablet', 'is tablet'],\n            ['small', 'is small'],\n            ['medium', 'is medium'],\n            ['large', 'is large']\n        ])\n\n        return <div>\n            Example code\n            <pre>{`const value = useBreakpoint('none', [\n    ['micro', 'is micro'],\n    ['mobile', 'is mobile'],\n    ['tablet', 'is tablet'],\n    ['small', 'is small'],\n    ['medium', 'is medium'],\n    ['large', 'is large']\n])`}\n            </pre>\n            <div>`{value}` is the current value. Resize to change.</div>\n            <div><br />For more info please see <strong>Notes</strong> tab.</div>\n        </div>\n    },\n    opts\n)\n","import { useState, useMemo } from 'react'\nimport { options, useResize, LANDSCAPE, PORTRAIT } from '.'\n\nconst getIsLandscape = function() {\n    const s = window.screen\n    // @ts-ignore\n    const orientation = (s.mozOrientation || s.orientation || { type: 'portrait' }).type || s.msOrientation\n    return orientation && orientation.includes('landscape')\n}\n\ntype TBreakpointItem = [string, unknown]\n\ntype TCalculateValue = (\n    defaultValue: unknown,\n    breakpointValues: TBreakpointItem[] | TBreakpointItem,\n    iw?: number\n) => typeof defaultValue\n\n// We will save the calculated value until innerWidth changes\nlet cachedProplessValue = {}\nconst calculateProplessValue = function(iw) {\n    if (cachedProplessValue[iw]) return cachedProplessValue[iw]\n\n    const isLandscape = getIsLandscape()\n    const proplessValue = { isLandscape, isPortrait: !isLandscape, isHDPI: window.devicePixelRatio > 1 }\n\n    // @ts-ignore\n    for (const [[firstLetter, secondLetter, ...restLetter], [from, to]] of Object.entries(options.breakpoints)) {\n        const isOrientedLandscape = LANDSCAPE === firstLetter\n        const isOrientedPortrait = PORTRAIT === firstLetter\n        const isOriented = isOrientedLandscape || isOrientedPortrait\n        const key = isOriented ? `${firstLetter}${secondLetter.toUpperCase()}${restLetter.join('')}`\n            : `${firstLetter.toUpperCase()}${secondLetter}${restLetter.join('')}`\n        proplessValue[`is${key}`] = (iw > from && iw <= to && (!isOriented || (isOrientedLandscape && isLandscape) || (isOrientedPortrait && !isLandscape)))\n    }\n\n    cachedProplessValue = { [iw]: proplessValue }\n\n    return proplessValue\n}\n\n/* eslint-disable no-continue */\nexport const calculateValue: TCalculateValue = function(defaultValue, breakpointValues = [], iw = window.innerWidth) {\n    if (defaultValue === undefined && !breakpointValues.length) {\n        return calculateProplessValue(iw)\n    }\n    const isLandscape = getIsLandscape()\n    if (!breakpointValues || !breakpointValues.length) {\n        return defaultValue\n    }\n    if (typeof breakpointValues[0] === 'string') {\n        // @ts-ignore\n        breakpointValues = [breakpointValues] // eslint-disable-line\n    }\n    for (const [key, value] of breakpointValues as TBreakpointItem[]) {\n        if (!options.breakpoints[key]) continue\n        const bp = options.breakpoints[key]\n        if (isLandscape && key[0] === PORTRAIT) continue\n        if (!isLandscape && key[0] === LANDSCAPE) continue\n        if (iw > bp[0] && iw <= bp[1]) return value\n    }\n    return defaultValue\n}\n\nlet cachedIw = window.innerWidth\n\nexport function useBreakpoint(defaultValue: any, breakpointValues: any[]): any\nexport function useBreakpoint(defaultValue: undefined, breakpointValues: undefined): { [key: string]: boolean }\nexport function useBreakpoint(defaultValue, breakpointValues) {\n    const [innerWidth, setInnerWidth] = useState(cachedIw)\n    useResize(() => {\n        cachedIw = window.innerWidth\n        setInnerWidth(cachedIw)\n    })\n    return useMemo(() => calculateValue(defaultValue, breakpointValues, innerWidth), [innerWidth, defaultValue])\n}\n\nexport default useBreakpoint\n","import { useEffect } from 'react'\n\nexport default function useResize(callback, throttle = 50) {\n    useEffect(() => {\n        let timeout\n        const handleResize = () => {\n            clearTimeout(timeout)\n            timeout = setTimeout(callback, throttle)\n        }\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n}","/* (ignored) */"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAJA;AADA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAEA;AAAA;AACA;;;;;;;;;;AAtCA;AACA;AACA;AACA;AAQA;AAEA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;AAtCA;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAGA;AASA;;;;;;;AAEA;AAYA;;;;;;;;;;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAQA;AAAA;;;;;;;;;;AA1EA;AAgBA;AACA;AAsBA;AAsBA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AACA;;;;;;;;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;A","sourceRoot":""}