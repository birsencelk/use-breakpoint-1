{"version":3,"file":"main.b7299043972ba0cba986.bundle.js","sources":["webpack:///./src/story.css","webpack:///./src sync \\.","webpack:///./src sync storybook\\.setup\\.[jt]sx","webpack:///./src/index.ts","webpack:///./src/mediaQuery.ts","webpack:///./src/readme.raw.md","webpack:///./src/story.css?39e0","webpack:///./src/story.tsx","webpack:///./src/useBreakpoint.ts","webpack:///./src/useResize.ts","webpack:///./util.inspect (ignored)"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../nodejs/node_modules/mhy/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"body {\\n  box-sizing: border-box;\\n  margin: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\", \"\",{\"version\":3,\"sources\":[\"C:\\\\Work\\\\Repos\\\\use-breakpoint/src\\\\story.css\"],\"names\":[],\"mappings\":\"AAAA;EACC,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,mBAAmB;EACnB,uBAAuB,EAAA\",\"file\":\"story.css\",\"sourcesContent\":[\"body {\\n\\tbox-sizing: border-box;\\n\\tmargin: 0;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n}\"]}]);\n// Exports\nmodule.exports = exports;\n","var map = {\n\t\"./story.tsx\": \"./src/story.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive \\\\.?(story|stories|book)\\\\.[jt]sx?$\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive storybook\\\\.setup\\\\.[jt]sx?$\";","import useBreakpoint from './useBreakpoint'\r\nimport useResize from './useResize'\r\nimport mediaQuery from './mediaQuery'\r\n\r\nexport const UP = '+'\r\nexport const DOWN = '-'\r\nexport const LANDSCAPE = '-'\r\nexport const PORTRAIT = '|'\r\n\r\ninterface IOptions {\r\n    breakpoints: {\r\n        [key: string]: number[]\r\n    }\r\n}\r\n\r\nexport let options\r\n\r\nexport const setup = function(opts: IOptions) {\r\n    Object.entries(opts.breakpoints).forEach(([name, [from, to]]) =>\r\n        [['', [from, to]], [UP, [from, 10000]], [DOWN, [0, to]]].forEach(([symbol, fromTo]) =>\r\n            ['', LANDSCAPE, PORTRAIT].forEach(orientation => {\r\n                // eslint-disable-next-line\r\n                opts.breakpoints[`${orientation}${name}${symbol}`] = fromTo as [number, number]\r\n            })\r\n        )\r\n    )\r\n\r\n    options = opts\r\n}\r\n\r\nexport const breakpoints = {\r\n    micro: [0, 375],\r\n    mi: [0, 375],\r\n    mobile: [376, 639],\r\n    m: [376, 639],\r\n    tablet: [640, 1023],\r\n    t: [640, 1023],\r\n    small: [1024, 1439],\r\n    s: [1024, 1439],\r\n    medium: [1440, 1919],\r\n    med: [1440, 1919],\r\n    large: [1920, 10000],\r\n    l: [1920, 10000],\r\n    // Multi range\r\n    device: [0, 1023],\r\n    d: [0, 1023],\r\n    smallDevice: [0, 639],\r\n    sd: [0, 639]\r\n}\r\n\r\nsetup({ breakpoints })\r\n\r\nexport default useBreakpoint\r\nexport { useResize, mediaQuery }","import { options, LANDSCAPE, PORTRAIT, UP, DOWN } from '.'\n\nconst mediaQuery = (input, returnType: StringConstructor|ObjectConstructor = String) => {\n    let generated = returnType === String ? '' : {}\n    if (typeof input[0] === 'string') {\n        input = [input]\n    }\n\n    for (const value of input) {\n        const bp = options.breakpoints[value[0]]\n        if (!bp) continue\n\n        const key = value[0]\n        const first = key[0]\n        const last = key[key.length - 1]\n\n        let query = `@media screen `\n\n        if (last === UP) {\n            query += `and (min-width: ${bp[0]}px) `\n        } else if (last === DOWN) {\n            query += `and (max-width: ${bp[1]}px) `\n        } else {\n            query += `and (min-width: ${bp[0]}px) and (max-width: ${bp[1]}px) `\n        }\n\n        if (first === PORTRAIT) {\n            query += `and (orientation: portrait) `\n        } else if (first === LANDSCAPE) {\n            query += `and (orientation: landscape) `\n        }\n\n        if (returnType === String) {\n            generated += query + `{ ${value[1]} }`\n        } else {\n            generated[query] = value[1]\n        }\n    }\n\n    return generated\n}\n\nexport default mediaQuery\n","export default \"# Intro\\r\\n\\r\\nReact `useBreakpoint` hook to have different values for a variable\\r\\nbased on a breakpoints.\\r\\n\\r\\n# Setup\\r\\n\\r\\nBy default you don't need to do anything. The following default values\\r\\nare being used.\\r\\n\\r\\n```js\\r\\nconst breakpoints = {\\r\\n    micro: [0, 375],\\r\\n    mobile: [376, 639],\\r\\n    tablet: [640, 1023],\\r\\n    small: [1024, 1439],\\r\\n    medium: [1440, 1919],\\r\\n    large: [1920, 10000]\\r\\n}\\r\\n```\\r\\n\\r\\n## Override default settings\\r\\n\\r\\n```js\\r\\nimport { setup, breakpoints } from '@w11r/use-breakpoint'\\r\\n\\r\\nsetup({\\r\\n    breakpoints: {\\r\\n        // Extend default values\\r\\n        ...breakpoints,\\r\\n        alienDevice: [342, 43534] // from, to\\r\\n    }\\r\\n})\\r\\n```\\r\\n\\r\\n# Usage\\r\\n\\r\\n```js\\r\\nuseBreakpoint(defaultValue, breakpointValues)\\r\\n\\r\\n// breakpointValues: array of breakpoint based values\\r\\n[\\r\\n  ['mobile', 300],\\r\\n  ['tablet', 400]\\r\\n]\\r\\n\\r\\n// In case you have a single breakpoint value, `['mobile', 300]`\\r\\nis enough instead of `[['mobile', 300]]`\\r\\n```\\r\\n\\r\\nComponent example\\r\\n\\r\\n```jsx\\r\\nimport useBreakpoint from '@w11r/use-breakpoint'\\r\\n\\r\\nconst MyCmp = () => {\\r\\n    const columns = useBreakpoint([1,2], ['mobile', [2,1]])\\r\\n    \\r\\n    return <Grid cols={columns} />\\r\\n}\\r\\n\\r\\n// Or using inline\\r\\nconst MyCmp = () => {\\r\\n    return <Grid cols={useBreakpoint([1,2], ['mobile', [2,1]])} />\\r\\n}\\r\\n```\\r\\n\\r\\n> _Rules-of-Hooks_ are still true in this case as well. Make sure\\r\\n> your component will __ALWAYS__ run it without any condition!\\r\\n\\r\\n## Modifiers\\r\\n\\r\\nAll breakpoint names coming with modifiers included.\\r\\n\\r\\n### Orientation prefix\\r\\n\\r\\n- `` (none): all\\r\\n- `-`: Landscape\\r\\n- `|`: Portrait\\r\\n\\r\\n### Range suffix\\r\\n\\r\\nYou can also control your value to behave as `and up` and `and down`.\\r\\n\\r\\n- `` (none): all\\r\\n- `+`: `and up`\\r\\n- `-`: `and down`\\r\\n\\r\\n### Examples\\r\\n\\r\\n- `['|mobile', 300]`: on mobile, on portrait\\r\\n- `['|mobile+', 300]`: on mobile and up, on portrait\\r\\n- `['mobile+', 300]`: on mobile and up, both portrait and landscape\\r\\n- `['mobile', 300]`: on mobile, both portrait and landscape\\r\\n- `['tablet-', 300]`: on tablet and below, both portrait and landscape\\r\\n- `['mobile-', 300]`: on mobile and down, both portrait and landscape\\r\\n\\r\\n# FAQ\\r\\n\\r\\n## Which rule is being prioritized\\r\\n\\r\\nThe hook uses _eager_ evaluation, so the first truthy breakpoint value\\r\\ngets returned.\\r\\n\"","var api = require(\"!../../../nodejs/node_modules/mhy/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../nodejs/node_modules/mhy/node_modules/css-loader/dist/cjs.js??ref--7-1!../../../nodejs/node_modules/mhy/node_modules/postcss-loader/src/index.js??ref--7-2!../../../nodejs/node_modules/mhy/node_modules/sass-loader/dist/cjs.js??ref--7-3!./story.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react'\r\nimport { storiesOf } from '@storybook/react'\r\n\r\nimport useBreakpoint from './useBreakpoint'\r\nimport readme from './readme.raw.md'\r\n\r\nimport './story.css'\r\n\r\nconst opts = {\r\n    notes: { markdown: readme }\r\n}\r\n\r\nstoriesOf('Hooks|useBreakpoint', module).add(\r\n    'Default',\r\n    () => {\r\n        const value = useBreakpoint('none', [\r\n            ['micro', 'is micro'],\r\n            ['mobile', 'is mobile'],\r\n            ['tablet', 'is tablet'],\r\n            ['small', 'is small'],\r\n            ['medium', 'is medium'],\r\n            ['large', 'is large']\r\n        ])\r\n\r\n        console.log(useBreakpoint())\r\n\r\n        return <div>\r\n            Example code\r\n            <pre>{`const value = useBreakpoint('none', [\r\n    ['micro', 'is micro'],\r\n    ['mobile', 'is mobile'],\r\n    ['tablet', 'is tablet'],\r\n    ['small', 'is small'],\r\n    ['medium', 'is medium'],\r\n    ['large', 'is large']\r\n])`}\r\n            </pre>\r\n            <div>`{value}` is the current value. Resize to change.</div>\r\n            <div><br />For more info please see <strong>Notes</strong> tab.</div>\r\n        </div>\r\n    },\r\n    opts\r\n)\r\n","import { useState, useMemo } from 'react'\r\nimport { options, useResize, LANDSCAPE, PORTRAIT } from '.'\r\n\r\ntype TBreakpointItem = [string, unknown]\r\n\r\ntype TCalculateValue = (\r\n    defaultValue: unknown,\r\n    breakpointValues: TBreakpointItem[] | TBreakpointItem,\r\n    iw?: number,\r\n    ih?: number) => typeof defaultValue\r\n\r\n// We will save the calculated value until innerWidth changes\r\nlet cachedProplessValue = {}\r\nconst calculateProplessValue = function(iw, ih) {\r\n    const key = `${iw}${ih}`\r\n    if (cachedProplessValue[key]) return cachedProplessValue[key]\r\n\r\n    const isLandscape = iw > ih\r\n    const proplessValue = { isLandscape, isPortrait: !isLandscape, isHDPI: window.devicePixelRatio > 1 }\r\n\r\n    // @ts-ignore\r\n    for (const [[firstLetter, secondLetter, ...restLetter], [from, to]] of Object.entries(options.breakpoints)) {\r\n        const isOrientedLandscape = LANDSCAPE === firstLetter\r\n        const isOrientedPortrait = PORTRAIT === firstLetter\r\n        const isOriented = isOrientedLandscape || isOrientedPortrait\r\n        const key = isOriented ? `${firstLetter}${secondLetter.toUpperCase()}${restLetter.join('')}`\r\n            : `${firstLetter.toUpperCase()}${secondLetter}${restLetter.join('')}`\r\n        proplessValue[`is${key}`] = (iw > from && iw <= to && (!isOriented || (isOrientedLandscape && isLandscape) || (isOrientedPortrait && !isLandscape)))\r\n    }\r\n\r\n    cachedProplessValue = { [iw]: proplessValue }\r\n\r\n    return proplessValue\r\n}\r\n\r\n/* eslint-disable no-continue */\r\nexport const calculateValue: TCalculateValue = function(defaultValue, breakpointValues = [], iw = window.innerWidth, ih = window.innerHeight) {\r\n    if (defaultValue === undefined && !breakpointValues.length) {\r\n        return calculateProplessValue(iw, ih)\r\n    }\r\n    const isLandscape = iw > ih\r\n    if (!breakpointValues || !breakpointValues.length) {\r\n        return defaultValue\r\n    }\r\n    if (typeof breakpointValues[0] === 'string') {\r\n        // @ts-ignore\r\n        breakpointValues = [breakpointValues] // eslint-disable-line\r\n    }\r\n    for (const [key, value] of breakpointValues as TBreakpointItem[]) {\r\n        if (!options.breakpoints[key]) continue\r\n        const bp = options.breakpoints[key]\r\n        if (isLandscape && key[0] === PORTRAIT) continue\r\n        if (!isLandscape && key[0] === LANDSCAPE) continue\r\n        if (iw >= bp[0] && iw <= bp[1]) return value\r\n    }\r\n    return defaultValue\r\n}\r\n\r\n// @ts-ignore\r\nconst getInnerWidth = () => typeof window !== 'undefined' ? window.innerWidth : (global.innerWidth || 1920)\r\n// @ts-ignore\r\nconst getInnerHeight = () => typeof window !== 'undefined' ? window.innerHeight : (global.innerHeight || 1080)\r\n\r\nlet cachedIw = getInnerWidth()\r\nlet cachedIh = getInnerHeight()\r\n\r\nexport function useBreakpoint(defaultValue: any, breakpointValues: any[]): any\r\nexport function useBreakpoint(): { [key: string]: boolean }\r\nexport function useBreakpoint(defaultValue?, breakpointValues?) {\r\n    const [[innerWidth, innerHeight], setInnerWidth] = useState([cachedIw, cachedIh])\r\n    useResize(() => {\r\n        cachedIw = getInnerWidth()\r\n        cachedIh = getInnerHeight()\r\n        setInnerWidth([cachedIw, cachedIh])\r\n    })\r\n    return useMemo(() => calculateValue(defaultValue, breakpointValues, innerWidth, innerHeight), [innerWidth, innerHeight, defaultValue])\r\n}\r\n\r\nexport default useBreakpoint\r\n","import { useEffect } from 'react'\n\nexport default function useResize(callback, throttle = 50) {\n    useEffect(() => {\n        let timeout\n        const handleResize = () => {\n            clearTimeout(timeout)\n            timeout = setTimeout(callback, throttle)\n        }\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n}","/* (ignored) */"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAEA;AACA;AACA;AACA;AAQA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAJA;AADA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAoBA;AAAA;AAAA;AAEA;AAAA;AACA;;;;;;;;;;AAjDA;AACA;AACA;AACA;AAQA;AAEA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;AAxCA;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAGA;AASA;AAEA;;;;;;;AAEA;AAYA;;;;;;;;;;AAhCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AASA;AAAA;;;;;;;;;;AAlEA;AACA;AAuBA;AAuBA;AAEA;AAEA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AACA;;;;;;;;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;A","sourceRoot":""}