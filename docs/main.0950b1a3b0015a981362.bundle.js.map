{"version":3,"file":"main.0950b1a3b0015a981362.bundle.js","sources":["webpack:///./src/story.css","webpack:///./src sync \\.","webpack:///./src/readme.raw.md","webpack:///./src/story.css?a007","webpack:///./src/story.tsx","webpack:///./src/useBreakpoint.ts","webpack:///./src/useResize.ts"],"sourcesContent":["exports = module.exports = require(\"../../../nodejs/node_modules/mhy/node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \"body {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n  margin: 0;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n\", \"\",{\"version\":3,\"sources\":[\"C:\\\\Work\\\\Repos\\\\use-breakpoint/src\\\\story.css\"],\"names\":[],\"mappings\":\"AAAA;EACC,8BAAsB;UAAtB,sBAAsB;EACtB,SAAS;EACT,oBAAa;EAAb,oBAAa;EAAb,aAAa;EACb,yBAAmB;MAAnB,sBAAmB;UAAnB,mBAAmB;EACnB,wBAAuB;MAAvB,qBAAuB;UAAvB,uBAAuB,EAAA\",\"file\":\"story.css\",\"sourcesContent\":[\"body {\\n\\tbox-sizing: border-box;\\n\\tmargin: 0;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n}\"]}]);\n","var map = {\n\t\"./story.tsx\": \"./src/story.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive \\\\.?(story|stories|book)\\\\.[jt]sx?$\";","export default \"# Intro\\r\\n\\r\\nReact `useBreakpoint` hook to have different values for a variable\\r\\nbased on a breakpoints.\\r\\n\\r\\n# Setup\\r\\n\\r\\nBy default you don't need to do anything. The following default values\\r\\nare being used.\\r\\n\\r\\n```js\\r\\nconst breakpoints = {\\r\\n    micro: [0, 375],\\r\\n    mobile: [376, 639],\\r\\n    tablet: [640, 1023],\\r\\n    small: [1024, 1439],\\r\\n    medium: [1440, 1919],\\r\\n    large: [1920, 10000]\\r\\n}\\r\\n```\\r\\n\\r\\n## Override default settings\\r\\n\\r\\n```js\\r\\nimport { setup, breakpoints } from '@w11r/use-breakpoint'\\r\\n\\r\\nsetup({\\r\\n    breakpoints: {\\r\\n        // Extend default values\\r\\n        ...breakpoints,\\r\\n        alienDevice: [342, 43534] // from, to\\r\\n    }\\r\\n})\\r\\n```\\r\\n\\r\\n# Usage\\r\\n\\r\\n```js\\r\\nuseBreakpoint(defaultValue, breakpointValues)\\r\\n\\r\\n// breakpointValues: array of breakpoint based values\\r\\n[\\r\\n  ['mobile', 300],\\r\\n  ['tablet', 400]\\r\\n]\\r\\n\\r\\n// In case you have a single breakpoint value, `['mobile', 300]`\\r\\nis enough instead of `[['mobile', 300]]`\\r\\n```\\r\\n\\r\\nComponent example\\r\\n\\r\\n```jsx\\r\\nimport useBreakpoint from '@w11r/use-breakpoint'\\r\\n\\r\\nconst MyCmp = () => {\\r\\n    const columns = useBreakpoint([1,2], ['mobile', [2,1]])\\r\\n    \\r\\n    return <Grid cols={columns} />\\r\\n}\\r\\n\\r\\n// Or using inline\\r\\nconst MyCmp = () => {\\r\\n    return <Grid cols={useBreakpoint([1,2], ['mobile', [2,1]])} />\\r\\n}\\r\\n```\\r\\n\\r\\n> _Rules-of-Hooks_ are still true in this case as well. Make sure\\r\\n> your component will __ALWAYS__ run it without any condition!\\r\\n\\r\\n## Modifiers\\r\\n\\r\\nAll breakpoint names coming with modifiers included.\\r\\n\\r\\n### Orientation prefix\\r\\n\\r\\n- `` (none): all\\r\\n- `-`: Landscape\\r\\n- `|`: Portrait\\r\\n\\r\\n### Range suffix\\r\\n\\r\\nYou can also control your value to behave as `and up` and `and down`.\\r\\n\\r\\n- `` (none): all\\r\\n- `+`: `and up`\\r\\n- `-`: `and down`\\r\\n\\r\\n### Examples\\r\\n\\r\\n- `['|mobile', 300]`: on mobile, on portrait\\r\\n- `['|mobile+', 300]`: on mobile and up, on portrait\\r\\n- `['mobile+', 300]`: on mobile and up, both portrait and landscape\\r\\n- `['mobile', 300]`: on mobile, both portrait and landscape\\r\\n- `['tablet-', 300]`: on tablet and below, both portrait and landscape\\r\\n- `['mobile-', 300]`: on mobile and down, both portrait and landscape\\r\\n\\r\\n# FAQ\\r\\n\\r\\n## Which rule is being prioritized\\r\\n\\r\\nThe hook uses _eager_ evaluation, so the first truthy breakpoint value\\r\\ngets returned.\\r\\n\"","\nvar content = require(\"!!../../../nodejs/node_modules/mhy/node_modules/css-loader/dist/cjs.js??ref--7-1!../../../nodejs/node_modules/mhy/node_modules/postcss-loader/src/index.js??ref--7-2!../../../nodejs/node_modules/mhy/node_modules/sass-loader/lib/loader.js??ref--7-3!./story.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../nodejs/node_modules/mhy/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../nodejs/node_modules/mhy/node_modules/css-loader/dist/cjs.js??ref--7-1!../../../nodejs/node_modules/mhy/node_modules/postcss-loader/src/index.js??ref--7-2!../../../nodejs/node_modules/mhy/node_modules/sass-loader/lib/loader.js??ref--7-3!./story.css\", function() {\n\t\tvar newContent = require(\"!!../../../nodejs/node_modules/mhy/node_modules/css-loader/dist/cjs.js??ref--7-1!../../../nodejs/node_modules/mhy/node_modules/postcss-loader/src/index.js??ref--7-2!../../../nodejs/node_modules/mhy/node_modules/sass-loader/lib/loader.js??ref--7-3!./story.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react'\r\nimport { storiesOf } from '@storybook/react'\r\n\r\nimport useBreakpoint from './useBreakpoint'\r\nimport readme from './readme.raw.md'\r\n\r\nimport './story.css'\r\n\r\nconst opts = {\r\n    notes: { markdown: readme }\r\n}\r\n\r\nstoriesOf('Hooks|useBreakpoint', module).add(\r\n    'Default',\r\n    () => {\r\n        const value = useBreakpoint('none', [\r\n            ['micro', 'is micro'],\r\n            ['mobile', 'is mobile'],\r\n            ['tablet', 'is tablet'],\r\n            ['small', 'is small'],\r\n            ['medium', 'is medium'],\r\n            ['large', 'is large']\r\n        ])\r\n\r\n        return <div>\r\n            Example code\r\n            <pre>{`const value = useBreakpoint('none', [\r\n    ['micro', 'is micro'],\r\n    ['mobile', 'is mobile'],\r\n    ['tablet', 'is tablet'],\r\n    ['small', 'is small'],\r\n    ['medium', 'is medium'],\r\n    ['large', 'is large']\r\n])`}\r\n            </pre>\r\n            <div>`{value}` is the current value. Resize to change.</div>\r\n            <div><br />For more info please see <strong>Notes</strong> tab.</div>\r\n        </div>\r\n    },\r\n    opts\r\n)\r\n","import { useState, useMemo } from 'react'\nimport useResize from './useResize'\n\nconst UP = '+'\nconst DOWN = '-'\nconst LANDSCAPE = '-'\nconst PORTRAIT = '|'\n\nlet options\n\nconst getIsLandscape = function() {\n    const s = window.screen\n    // @ts-ignore\n    const orientation = (s.mozOrientation || s.orientation || { type: 'portrait' }).type || s.msOrientation\n    return orientation && orientation.includes('landscape')\n}\n\ntype TBreakpointItem = [string, unknown]\n\ntype TCalculateValue = (\n    defaultValue: unknown,\n    breakpointValues: TBreakpointItem[] | TBreakpointItem,\n    iw?: number\n) => typeof defaultValue\n\n/* eslint-disable no-continue */\nexport const calculateValue: TCalculateValue = function(defaultValue, breakpointValues = [], iw = window.innerWidth) {\n    const isLandscape = getIsLandscape()\n    if (!breakpointValues || !breakpointValues.length) {\n        return defaultValue\n    }\n    if (typeof breakpointValues[0] === 'string') {\n        // @ts-ignore\n        breakpointValues = [breakpointValues] // eslint-disable-line\n    }\n    for (const [key, value] of breakpointValues as TBreakpointItem[]) {\n        if (!options.breakpoints[key]) continue\n        const [from, to] = options.breakpoints[key]\n        if (isLandscape && key.startsWith(PORTRAIT)) continue\n        if (!isLandscape && key.startsWith(LANDSCAPE)) continue\n        if (iw > from && iw <= to) return value\n    }\n    return defaultValue\n}\n\nexport const useBreakpoint = function(defaultValue, breakpointValues) {\n    const [innerWidth, setInnerWidth] = useState(window.innerWidth)\n    useResize(() => setInnerWidth(window.innerWidth))\n    return useMemo(() => calculateValue(defaultValue, breakpointValues), [innerWidth])\n}\n\ninterface IOptions {\n    breakpoints: {\n        [key: string]: number[]\n    }\n}\n\nexport const setup = function(opts: IOptions) {\n    Object.entries(opts.breakpoints).forEach(([name, [from, to]]) => {\n        // eslint-disable-next-line\n        ;[['', [from, to]], [UP, [from, 10000]], [DOWN, [0, to]]].forEach(([symbol, fromTo]) =>\n            ['', LANDSCAPE, PORTRAIT].forEach(orientation => {\n                // eslint-disable-next-line\n                opts.breakpoints[`${orientation}${name}${symbol}`] = fromTo as [number, number]\n            })\n        )\n    })\n\n    options = opts\n}\n\nexport const breakpoints = {\n    micro: [0, 375],\n    mobile: [376, 639],\n    tablet: [640, 1023],\n    small: [1024, 1439],\n    medium: [1440, 1919],\n    large: [1920, 10000]\n}\n\nsetup({ breakpoints })\n\nexport default useBreakpoint\n","import { useEffect } from 'react'\n\nexport default function useResize(callback, throttle = 50) {\n    useEffect(() => {\n        let timeout\n        const handleResize = () => {\n            clearTimeout(timeout)\n            timeout = setTimeout(callback, throttle)\n        }\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n}"],"mappings":";;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAGA;AASA;;;;;;;AAEA;AAYA;;;;;;;;;;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAWA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;AA/EA;AACA;AACA;AACA;AAEA;AAEA;AAgBA;AAmBA;AAYA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAXA;AACA;;;;;;;;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}